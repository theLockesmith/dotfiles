# vim: set ft=sh sw=2 et :
alias dos2unix='sed "s/$//"'

alias tmux='tmux -2'

if command -v exa >/dev/null 2>&1; then
  alias ls='exa'
else
  alias ls='ls --color=auto'
fi
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

if command -v vim >/dev/null 2>&1; then
  alias vi='vim'
fi
if command -v nvim >/dev/null 2>&1; then
  alias vim='nvim'
  alias vi='nvim'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo -e terminal || echo -e error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

## Do things ##
alias fsearch='flatpak search'
alias fuckingown='sudo chown -Rh $USER:$USER /home/$USER'
alias pup='pip3 list --outdated --format=freeze | grep -v "^\-e" | cut -d = -f 1  | xargs -n1 pip3 install -U'
alias neo='clear && resh'
alias wine='wine 2>~/.wine.error.log'
alias tclock='tty-clock -s -c -t -n -C 5'
alias matrix='cmatrix -a -C magenta'
alias matrixr='cmatrix -a -r'

## Shortcuts ##
alias resh='. ~/.bashrc'
alias c='clear'
alias dist='echo -e $OS'
alias l='ls'
alias la='ls -A'
alias ll='ls -lA'
alias mkdir='mkdir -p'
alias now='date +"%T"'
alias nowdate='date +"%d-%m-%Y"'
alias pa='ps aux | grep'
alias papy='ps -ef | grep python'
alias pwsh='TERM=xterm pwsh'
alias video='lspci -k | grep -EA3 "VGA|3D|Display"'
alias x='exit'
alias whatsmyip='dig +short myip.opendns.com @resolver1.opendns.com'
alias jwatch='journalctl -f --output cat -u'
alias switch='nix-collect-garbage; home-manager switch; tmux kill-server; exec bash -l'
alias cowsay-rando='$HOME/.scripts/cowsay-rando'
alias randosay='cowsay-rando'

## KDE ##
alias save-session="qdbus org.kde.ksmserver /KSMServer saveCurrentSession"

## Remote weechat ##
alias weechat='ssh -t docker docker attach weechat'

## Editors ##
alias code='codium '

## Navigation ##
alias ..='cd ..'
alias desktop='cd ~/Desktop/'
alias docs='cd ~/Documents/'
alias downloads='cd ~/Downloads/'
alias etc='cd /etc'
alias home='cd ~/'
alias opt='cd /opt'
alias raid0="cd /mnt/Raid0"

## Stop after sending count echo -e _REQUEST packets ##
alias ping='ping -c 5'

## Do not wait interval 1 second, go fast ##
alias fastping='ping -c 100 -s.2'
alias ports='netstat -tulanp'

## Display ports used by program ##
alias psport='sudo netstat -tulnp | grep'

## do not delete / or prompt if deleting more than 3 files at a time ##
alias rm='rm -I --preserve-root'

## confirmation ##
alias mv='mv -i'
alias cp='cp -i'
alias ln='ln -i'

## Parenting changing perms on / ##
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

## become root ##
alias root='\sudo -i'

## Preserve env when sudo ##
alias sudo='\sudo -E'

## reboot / halt / poweroff ##
alias reboot='sudo /sbin/reboot'
alias poweroff='sudo /sbin/poweroff'
alias halt='sudo /sbin/halt'
alias shutdown='sudo /sbin/shutdown'

## this one saved by butt so many times ##
alias wget='wget -c'
alias rm='rm -i'

## set some other defaults ##
alias df='df -H'

## Python stuffs ##
alias pip-update='cat requirements.txt | xargs -n 1 python3 -m pip install'

#######################
## preexec_functions ##
#######################
## Function to set or unset the alias based on the current Kubernetes context.
function set_kube_context_alias() {
  # Get the current context
  local current_context=$(kubectl config current-context 2>/dev/null)

  # Define the path to the context-specific scripts or binaries
  local context_script_path="$HOME/.kube/contexts/$current_context/kubectl.sh"
  local context_binary_path="$HOME/.kube/contexts/$current_context/kubectl"

  # Check if the current context matches a known context
  if [[ -f "$context_script_path" ]]; then
    alias kubectl="$context_script_path"
    export KUBECTL_PATH="$context_script_path"
  elif [[ -f "$context_binary_path" ]]; then
    alias kubectl="$context_binary_path"
    export KUBECTL_PATH="$context_binary_path"
  else
    alias kubectl="/usr/local/bin/kubectl"
    export KUBECTL_PATH="/usr/local/bin/kubectl"
  fi
}

# Hook the function to the preexec event to check before every command
set_kube_context_alias
preexec_functions+=('set_kube_context_alias')
